// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: raft.proto
// Protobuf C++ Version: 6.30.2

#include "raft.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace raft {

inline constexpr RequestVoteReply::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        term_{0},
        votegranted_{false} {}

template <typename>
PROTOBUF_CONSTEXPR RequestVoteReply::RequestVoteReply(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(RequestVoteReply_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct RequestVoteReplyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RequestVoteReplyDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RequestVoteReplyDefaultTypeInternal() {}
  union {
    RequestVoteReply _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RequestVoteReplyDefaultTypeInternal _RequestVoteReply_default_instance_;

inline constexpr RequestVoteArgs::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        term_{0},
        candidateid_{0},
        lastlogindex_{0},
        lastlogterm_{0} {}

template <typename>
PROTOBUF_CONSTEXPR RequestVoteArgs::RequestVoteArgs(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(RequestVoteArgs_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct RequestVoteArgsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RequestVoteArgsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RequestVoteArgsDefaultTypeInternal() {}
  union {
    RequestVoteArgs _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RequestVoteArgsDefaultTypeInternal _RequestVoteArgs_default_instance_;
}  // namespace raft
static constexpr const ::_pb::EnumDescriptor *PROTOBUF_NONNULL *PROTOBUF_NULLABLE
    file_level_enum_descriptors_raft_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor *PROTOBUF_NONNULL *PROTOBUF_NULLABLE
    file_level_service_descriptors_raft_2eproto = nullptr;
const ::uint32_t
    TableStruct_raft_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        PROTOBUF_FIELD_OFFSET(::raft::RequestVoteArgs, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::raft::RequestVoteArgs, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::raft::RequestVoteArgs, _impl_.term_),
        PROTOBUF_FIELD_OFFSET(::raft::RequestVoteArgs, _impl_.candidateid_),
        PROTOBUF_FIELD_OFFSET(::raft::RequestVoteArgs, _impl_.lastlogindex_),
        PROTOBUF_FIELD_OFFSET(::raft::RequestVoteArgs, _impl_.lastlogterm_),
        0,
        1,
        2,
        3,
        PROTOBUF_FIELD_OFFSET(::raft::RequestVoteReply, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::raft::RequestVoteReply, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::raft::RequestVoteReply, _impl_.term_),
        PROTOBUF_FIELD_OFFSET(::raft::RequestVoteReply, _impl_.votegranted_),
        0,
        1,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, 12, -1, sizeof(::raft::RequestVoteArgs)},
        {16, 26, -1, sizeof(::raft::RequestVoteReply)},
};
static const ::_pb::Message* PROTOBUF_NONNULL const file_default_instances[] = {
    &::raft::_RequestVoteArgs_default_instance_._instance,
    &::raft::_RequestVoteReply_default_instance_._instance,
};
const char descriptor_table_protodef_raft_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\nraft.proto\022\004raft\"_\n\017RequestVoteArgs\022\014\n"
    "\004term\030\001 \001(\005\022\023\n\013candidateId\030\002 \001(\005\022\024\n\014last"
    "LogIndex\030\003 \001(\005\022\023\n\013lastLogTerm\030\004 \001(\005\"5\n\020R"
    "equestVoteReply\022\014\n\004term\030\001 \001(\005\022\023\n\013voteGra"
    "nted\030\002 \001(\0102D\n\004Raft\022<\n\013RequestVote\022\025.raft"
    ".RequestVoteArgs\032\026.raft.RequestVoteReply"
    "b\006proto3"
};
static ::absl::once_flag descriptor_table_raft_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_raft_2eproto = {
    false,
    false,
    248,
    descriptor_table_protodef_raft_2eproto,
    "raft.proto",
    &descriptor_table_raft_2eproto_once,
    nullptr,
    0,
    2,
    schemas,
    file_default_instances,
    TableStruct_raft_2eproto::offsets,
    file_level_enum_descriptors_raft_2eproto,
    file_level_service_descriptors_raft_2eproto,
};
namespace raft {
// ===================================================================

class RequestVoteArgs::_Internal {
 public:
  using HasBits =
      decltype(std::declval<RequestVoteArgs>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(RequestVoteArgs, _impl_._has_bits_);
};

RequestVoteArgs::RequestVoteArgs(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, RequestVoteArgs_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:raft.RequestVoteArgs)
}
RequestVoteArgs::RequestVoteArgs(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const RequestVoteArgs& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, RequestVoteArgs_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE RequestVoteArgs::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void RequestVoteArgs::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, term_),
           0,
           offsetof(Impl_, lastlogterm_) -
               offsetof(Impl_, term_) +
               sizeof(Impl_::lastlogterm_));
}
RequestVoteArgs::~RequestVoteArgs() {
  // @@protoc_insertion_point(destructor:raft.RequestVoteArgs)
  SharedDtor(*this);
}
inline void RequestVoteArgs::SharedDtor(MessageLite& self) {
  RequestVoteArgs& this_ = static_cast<RequestVoteArgs&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL RequestVoteArgs::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) RequestVoteArgs(arena);
}
constexpr auto RequestVoteArgs::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(RequestVoteArgs),
                                            alignof(RequestVoteArgs));
}
constexpr auto RequestVoteArgs::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_RequestVoteArgs_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &RequestVoteArgs::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<RequestVoteArgs>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &RequestVoteArgs::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<RequestVoteArgs>(), &RequestVoteArgs::ByteSizeLong,
              &RequestVoteArgs::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(RequestVoteArgs, _impl_._cached_size_),
          false,
      },
      &RequestVoteArgs::kDescriptorMethods,
      &descriptor_table_raft_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull RequestVoteArgs_class_data_ =
        RequestVoteArgs::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL RequestVoteArgs::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&RequestVoteArgs_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(RequestVoteArgs_class_data_.tc_table);
  return RequestVoteArgs_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 0, 2>
RequestVoteArgs::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RequestVoteArgs, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    RequestVoteArgs_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::raft::RequestVoteArgs>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // int32 lastLogTerm = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(RequestVoteArgs, _impl_.lastlogterm_), 3>(),
     {32, 3, 0, PROTOBUF_FIELD_OFFSET(RequestVoteArgs, _impl_.lastlogterm_)}},
    // int32 term = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(RequestVoteArgs, _impl_.term_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(RequestVoteArgs, _impl_.term_)}},
    // int32 candidateId = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(RequestVoteArgs, _impl_.candidateid_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(RequestVoteArgs, _impl_.candidateid_)}},
    // int32 lastLogIndex = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(RequestVoteArgs, _impl_.lastlogindex_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(RequestVoteArgs, _impl_.lastlogindex_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 term = 1;
    {PROTOBUF_FIELD_OFFSET(RequestVoteArgs, _impl_.term_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // int32 candidateId = 2;
    {PROTOBUF_FIELD_OFFSET(RequestVoteArgs, _impl_.candidateid_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // int32 lastLogIndex = 3;
    {PROTOBUF_FIELD_OFFSET(RequestVoteArgs, _impl_.lastlogindex_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // int32 lastLogTerm = 4;
    {PROTOBUF_FIELD_OFFSET(RequestVoteArgs, _impl_.lastlogterm_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void RequestVoteArgs::Clear() {
// @@protoc_insertion_point(message_clear_start:raft.RequestVoteArgs)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fu) != 0) {
    ::memset(&_impl_.term_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.lastlogterm_) -
        reinterpret_cast<char*>(&_impl_.term_)) + sizeof(_impl_.lastlogterm_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL RequestVoteArgs::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const RequestVoteArgs& this_ = static_cast<const RequestVoteArgs&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL RequestVoteArgs::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const RequestVoteArgs& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:raft.RequestVoteArgs)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 term = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (this_._internal_term() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<1>(
              stream, this_._internal_term(), target);
    }
  }

  // int32 candidateId = 2;
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (this_._internal_candidateid() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<2>(
              stream, this_._internal_candidateid(), target);
    }
  }

  // int32 lastLogIndex = 3;
  if ((this_._impl_._has_bits_[0] & 0x00000004u) != 0) {
    if (this_._internal_lastlogindex() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<3>(
              stream, this_._internal_lastlogindex(), target);
    }
  }

  // int32 lastLogTerm = 4;
  if ((this_._impl_._has_bits_[0] & 0x00000008u) != 0) {
    if (this_._internal_lastlogterm() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<4>(
              stream, this_._internal_lastlogterm(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:raft.RequestVoteArgs)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t RequestVoteArgs::ByteSizeLong(const MessageLite& base) {
  const RequestVoteArgs& this_ = static_cast<const RequestVoteArgs&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t RequestVoteArgs::ByteSizeLong() const {
  const RequestVoteArgs& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:raft.RequestVoteArgs)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fu) != 0) {
    // int32 term = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (this_._internal_term() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_term());
      }
    }
    // int32 candidateId = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (this_._internal_candidateid() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_candidateid());
      }
    }
    // int32 lastLogIndex = 3;
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (this_._internal_lastlogindex() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_lastlogindex());
      }
    }
    // int32 lastLogTerm = 4;
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (this_._internal_lastlogterm() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_lastlogterm());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void RequestVoteArgs::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<RequestVoteArgs*>(&to_msg);
  auto& from = static_cast<const RequestVoteArgs&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:raft.RequestVoteArgs)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (from._internal_term() != 0) {
        _this->_impl_.term_ = from._impl_.term_;
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (from._internal_candidateid() != 0) {
        _this->_impl_.candidateid_ = from._impl_.candidateid_;
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (from._internal_lastlogindex() != 0) {
        _this->_impl_.lastlogindex_ = from._impl_.lastlogindex_;
      }
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (from._internal_lastlogterm() != 0) {
        _this->_impl_.lastlogterm_ = from._impl_.lastlogterm_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RequestVoteArgs::CopyFrom(const RequestVoteArgs& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:raft.RequestVoteArgs)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void RequestVoteArgs::InternalSwap(RequestVoteArgs* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RequestVoteArgs, _impl_.lastlogterm_)
      + sizeof(RequestVoteArgs::_impl_.lastlogterm_)
      - PROTOBUF_FIELD_OFFSET(RequestVoteArgs, _impl_.term_)>(
          reinterpret_cast<char*>(&_impl_.term_),
          reinterpret_cast<char*>(&other->_impl_.term_));
}

::google::protobuf::Metadata RequestVoteArgs::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class RequestVoteReply::_Internal {
 public:
  using HasBits =
      decltype(std::declval<RequestVoteReply>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(RequestVoteReply, _impl_._has_bits_);
};

RequestVoteReply::RequestVoteReply(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, RequestVoteReply_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:raft.RequestVoteReply)
}
RequestVoteReply::RequestVoteReply(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const RequestVoteReply& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, RequestVoteReply_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE RequestVoteReply::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void RequestVoteReply::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, term_),
           0,
           offsetof(Impl_, votegranted_) -
               offsetof(Impl_, term_) +
               sizeof(Impl_::votegranted_));
}
RequestVoteReply::~RequestVoteReply() {
  // @@protoc_insertion_point(destructor:raft.RequestVoteReply)
  SharedDtor(*this);
}
inline void RequestVoteReply::SharedDtor(MessageLite& self) {
  RequestVoteReply& this_ = static_cast<RequestVoteReply&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL RequestVoteReply::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) RequestVoteReply(arena);
}
constexpr auto RequestVoteReply::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(RequestVoteReply),
                                            alignof(RequestVoteReply));
}
constexpr auto RequestVoteReply::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_RequestVoteReply_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &RequestVoteReply::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<RequestVoteReply>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &RequestVoteReply::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<RequestVoteReply>(), &RequestVoteReply::ByteSizeLong,
              &RequestVoteReply::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(RequestVoteReply, _impl_._cached_size_),
          false,
      },
      &RequestVoteReply::kDescriptorMethods,
      &descriptor_table_raft_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull RequestVoteReply_class_data_ =
        RequestVoteReply::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL RequestVoteReply::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&RequestVoteReply_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(RequestVoteReply_class_data_.tc_table);
  return RequestVoteReply_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2>
RequestVoteReply::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RequestVoteReply, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    RequestVoteReply_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::raft::RequestVoteReply>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // bool voteGranted = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(RequestVoteReply, _impl_.votegranted_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(RequestVoteReply, _impl_.votegranted_)}},
    // int32 term = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(RequestVoteReply, _impl_.term_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(RequestVoteReply, _impl_.term_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 term = 1;
    {PROTOBUF_FIELD_OFFSET(RequestVoteReply, _impl_.term_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // bool voteGranted = 2;
    {PROTOBUF_FIELD_OFFSET(RequestVoteReply, _impl_.votegranted_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void RequestVoteReply::Clear() {
// @@protoc_insertion_point(message_clear_start:raft.RequestVoteReply)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    ::memset(&_impl_.term_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.votegranted_) -
        reinterpret_cast<char*>(&_impl_.term_)) + sizeof(_impl_.votegranted_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL RequestVoteReply::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const RequestVoteReply& this_ = static_cast<const RequestVoteReply&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL RequestVoteReply::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const RequestVoteReply& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:raft.RequestVoteReply)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 term = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (this_._internal_term() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<1>(
              stream, this_._internal_term(), target);
    }
  }

  // bool voteGranted = 2;
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (this_._internal_votegranted() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          2, this_._internal_votegranted(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:raft.RequestVoteReply)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t RequestVoteReply::ByteSizeLong(const MessageLite& base) {
  const RequestVoteReply& this_ = static_cast<const RequestVoteReply&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t RequestVoteReply::ByteSizeLong() const {
  const RequestVoteReply& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:raft.RequestVoteReply)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    // int32 term = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (this_._internal_term() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_term());
      }
    }
    // bool voteGranted = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (this_._internal_votegranted() != 0) {
        total_size += 2;
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void RequestVoteReply::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<RequestVoteReply*>(&to_msg);
  auto& from = static_cast<const RequestVoteReply&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:raft.RequestVoteReply)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (from._internal_term() != 0) {
        _this->_impl_.term_ = from._impl_.term_;
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (from._internal_votegranted() != 0) {
        _this->_impl_.votegranted_ = from._impl_.votegranted_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RequestVoteReply::CopyFrom(const RequestVoteReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:raft.RequestVoteReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void RequestVoteReply::InternalSwap(RequestVoteReply* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RequestVoteReply, _impl_.votegranted_)
      + sizeof(RequestVoteReply::_impl_.votegranted_)
      - PROTOBUF_FIELD_OFFSET(RequestVoteReply, _impl_.term_)>(
          reinterpret_cast<char*>(&_impl_.term_),
          reinterpret_cast<char*>(&other->_impl_.term_));
}

::google::protobuf::Metadata RequestVoteReply::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace raft
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ [[maybe_unused]] =
        (::_pbi::AddDescriptors(&descriptor_table_raft_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
